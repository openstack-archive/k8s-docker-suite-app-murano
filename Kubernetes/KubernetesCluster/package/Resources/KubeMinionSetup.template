#  Licensed under the Apache License, Version 2.0 (the "License"); you may
#  not use this file except in compliance with the License. You may obtain
#  a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.

FormatVersion: 2.0.0
Version: 1.0.0
Name: Setup Kubernetes Node

Parameters:
  name: $name
  ip: $ip
  masterIp: $masterIp
  dockerRegistry: $dockerRegistry
  dockerMirror: $dockerMirror
  gcloudKey: $gcloudKey
  useFlannel: $useFlannel

Body: |
  if args.dockerRegistry:
    setupRegistry(args.dockerRegistry)
  if args.dockerMirror:
    setupMirror(args.dockerMirror)
  if args.gcloudKey:
    loginToGoogleRegistry("'{0}'".format(args.gcloudKey))

  restartDocker()
  setup('{0} {1} {2} {3}'.format(args.name, args.ip, args.masterIp, args.useFlannel))

Scripts:
  setup:
    Type: Application
    Version: 1.0.0
    EntryPoint: minion-kube-setup.sh
    Files:
      - default_scripts/kube-proxy
      - default_scripts/kubelet
      - init_conf/kubelet.conf
      - init_conf/kube-proxy.conf
      - initd_scripts/kubelet
      - initd_scripts/kube-proxy
      - environ/kubelet
      - environ/kube-config
      - systemd/kube-proxy.service
      - systemd/kubelet.service

    Options:
      captureStdout: true
      captureStderr: true

  setupRegistry:
    Type: Application
    Version: 1.0.0
    EntryPoint: setupDockerRegistry.sh
    Files: []
    Options:
      captureStdout: true
      captureStderr: true

  setupMirror:
    Type: Application
    Version: 1.0.0
    EntryPoint: setupDockerMirror.sh
    Files: []
    Options:
      captureStdout: true
      captureStderr: true

  loginToGoogleRegistry:
    Type: Application
    Version: 1.0.0
    EntryPoint: loginToGoogleRegistry.sh
    Files: []
    Options:
      captureStdout: true
      captureStderr: true

  restartDocker:
    Type: Application
    Version: 1.0.0
    EntryPoint: restartDocker.sh
    Options:
      captureStdout: false
      captureStderr: false
