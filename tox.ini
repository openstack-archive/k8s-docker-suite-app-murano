[tox]
minversion = 1.6
skipsdist = True
skip_missing_interpreters = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
         LANG=en_US.UTF-8
         LANGUAGE=en_US:en
         LC_ALL=C
# to be used in yamllint.sh and shellcheck.sh
         APP_DIRS=Applications DockerInterfacesLibrary DockerStandaloneHost Kubernetes
passenv = OS_* MURANO* *ENDPOINT* APPS_DIRS
deps=
    -r{toxinidir}/test-requirements.txt
distribute = false

[testenv:venv]
commands = {posargs:}

[testenv:docs]
commands = sphinx-build doc/source doc/build

[testenv:deploy_scale_k8s]
commands = python -m unittest tests.test_k8s_app.MuranoK8sTest.test_deploy_scale_k8s

[testenv:shellcheck]
# 'shellcheck' is not an Python package, so it can be run w\o
# virtual env. But tox is a usable wrapper to run any kind of tests -
# let's use it for common test-run as well - for unification purposes.
whitelist_externals = shellcheck
commands = {toxinidir}/tools/jenkins/shellcheck.sh {toxinidir}

[testenv:yaml-syntaxcheck]
deps = yamllint
commands = {toxinidir}/tools/jenkins/yamllint.sh {toxinidir}

[testenv:linters]
# linters env - it's a combination of check's (usually syntax)
# for aggregate non-destructive run's. Used only in openstack-infra ci for
# decrease resource usage.
# Current duplicate list:
# shellcheck
# yaml-syntaxcheck
#
# We need to suppress exit code from 'command1', to be able run 'command2';
# Otherwise, if some command failed - exit code from tox itself will be 1
ignore_errors=True
deps = yamllint
       murano-pkg-check
whitelist_externals = shellcheck
commands = {toxinidir}/tools/jenkins/shellcheck.sh {toxinidir}
           {toxinidir}/tools/jenkins/yamllint.sh {toxinidir}
           murano-pkg-check --verbose --debug --discover {toxinidir}

[testenv:murano-pkg-check]
deps = 	murano-pkg-check
commands = murano-pkg-check --verbose --debug --discover {toxinidir}

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html
